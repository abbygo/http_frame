#abby
import re

import pytest
import yaml
from pathlib import Path
import jinja2
# 解析yaml中的内容
def parse_content(data,file_name):

    parameters_dict={}
    fun_dict={}
    file_dict={}
    for command_name, command_content in data.items():
        raw = yaml.dump(command_content)

        # r是（rawsting） 的缩写，作用避免少写了\
        parameters = re.findall(r"\$(\w.*)", raw)
        # 函数的命名规则都要一个前缀来表面是函数，def_
        if command_name.startswith('def_'):
            # 去掉函数前缀def_,获取真实的函数名
            fun_name = command_name[4:]
            tmp={}
            # 构造key ,value 的参数
            for single_para in parameters:
                tmp.update({single_para: single_para})
            parameters_dict[fun_name]=tmp

            fun_dict[fun_name]=parameters
    file_dict['filename']=file_name
    print([parameters_dict,fun_dict,file_dict])
    # return  [parameters_dict,fun_dict,file_dict]
    return create_testcase([parameters_dict,fun_dict,file_dict])


def create_testcase(data):

    __TEMPLATE__ = jinja2.Template(
        """# NOTE: Generated By HttpRunner v{{ version }}

    import re
    import pytest

    from requests_wework.testcases.base_case import BaseCase
    class {{ class_name }}(BaseCase):
        {% for method,parameters in  para %}
            @pytest.mark.parametrize({{parameters}},[])
            def test_{{method}}(self, {{parameters}}):
                r=self.basecase('{{class_name}}', {
                    {{parameters}}
                },startAssert=False)
                from jsonpath import jsonpath
                assert 'created' == jsonpath(r, '$.errmsg')[0]
        {% endfor %}
        

    """
    )

    newdata = {
        "class_name": f"TestCase{data[2]['filename']}",
        "path": f"./{data[2]['filename']}",
        "parameterdict":data[0].items(),
        "para": data[1].items()
    }

    content = __TEMPLATE__.render(newdata)
    with open(f'test_{data[2]["filename"]}.py', "w", encoding="utf-8") as f:
        f.write(content)
    print(content)


@pytest.mark.parametrize('file_name',[r'C:\Users\lnz\PycharmProjects\HGS\requests_wework\testcases\address.yaml'])
def test_readyaml(file_name):

    p=Path(file_name)
    with open(file_name, encoding='utf-8') as f:
        res = yaml.safe_load(f)
        return parse_content(res,p.name)
